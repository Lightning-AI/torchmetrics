trigger:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

machine: "L4"
timeout: "35" # minutes
parametrize:
  matrix: {}
  include:
    - image: "pytorch/pytorch:2.0.1-cuda11.7-cudnn8-runtime"
      torch-ver: "2.0"
      requires: "oldest"
    - image: "pytorch/pytorch:2.7.1-cuda12.6-cudnn9-runtime"
      torch-ver: "2.7"
  exclude: []

run: |
  whereis nvidia
  nvidia-smi
  python --version
  pip --version
  #pip list
  set -ex

  python .github/assistant.py set-oldest-versions --req_files='["requirements/_integrate.txt"]'
  cat requirements/_integrate.txt

  CUDA_VERSION=$(nvcc --version | sed -n 's/^.*release \([0-9]\+\.[0-9]\+\).*$/\1/p')
  CUDA_VERSION_MM="${CUDA_VERSION//'.'/''}"
  TORCH_URL="https://download.pytorch.org/whl/cu${CUDA_VERSION_MM}/torch_stable.html"

  python -m wget https://raw.githubusercontent.com/Lightning-AI/utilities/main/scripts/adjust-torch-versions.py
  for fpath in `ls requirements/*.txt`; do
      # torch version shall be sourced based on the used docker
      python adjust-torch-versions.py $fpath
  done

  pip install -q -r requirements/_integrate.txt
  # force reinstall TM as it could be overwritten by integration's dependencies
  pip install . -U -r requirements/_tests.txt --find-links ${TORCH_URL}

  pip list
  python -c "from torch import __version__ as ver ; assert '.'.join(str(ver).split('.')[:2]) == '$(torch-ver)', f'PyTorch: {ver}'"
  python -c "import torch ; mgpu = torch.cuda.device_count() ; assert mgpu >= 1, f'found GPUs: {mgpu}'"

  pytest . -v --durations=0 --timeout=360
