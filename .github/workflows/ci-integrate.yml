name: "CI integrations | CPU"

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on: # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]
    types: [opened, reopened, ready_for_review, synchronize]
  schedule:
    # At the end of every day
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}

defaults:
  run:
    shell: bash

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04", "macOS-13", "windows-2022"]
        python-version: ["3.9", "3.11"]
        requires: ["oldest", "latest"]
        exclude:
          - { python-version: "3.10", requires: "oldest" }
          - { python-version: "3.10", os: "windows" } # todo: https://discuss.pytorch.org/t/numpy-is-not-available-error/146192
        include:
          - { python-version: "3.10", requires: "latest", os: "ubuntu-22.04" }
          # - { python-version: "3.10", requires: "latest", os: "macOS-14" } # M1 machine # todo: crashing for MPS out of memory
    env:
      FREEZE_REQUIREMENTS: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}
      UV_TORCH_BACKEND: "cpu"

    # Timeout: https://stackoverflow.com/a/59076067/4521646
    # seems that MacOS jobs take much more than orger OS
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v5

      - name: Install uv and set Python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          # TODO: Avoid activating environment like this
          # see: https://github.com/astral-sh/setup-uv/tree/v6/?tab=readme-ov-file#activate-environment
          activate-environment: true
          enable-cache: true

      - run: uv pip install -r requirements/_ci.txt

      - name: source cashing
        uses: ./.github/actions/pull-caches
        with:
          requires: ${{ matrix.requires }}
      - name: set oldest if/only for integrations
        if: matrix.requires == 'oldest'
        run: python .github/assistant.py set-oldest-versions --req_files='["requirements/_integrate.txt"]'

      - name: Install all dependencies
        run: |
          # this was updated in `source cashing` by optional oldest
          cat requirements/_integrate.txt
          # to have install pyTorch
          uv pip install -e . "setuptools==69.5.1" --extra-index-url=${PYTORCH_URL}

          # adjust version to PT ecosystem based on installed TM
          python -m wget https://raw.githubusercontent.com/Lightning-AI/utilities/main/scripts/adjust-torch-versions.py
          # make it as a loop over all files in `requirements`
          for req in requirements/*.txt; do
            python adjust-torch-versions.py "$req"
          done

          # install package and dependencies
          uv pip install -e . -r requirements/_tests.txt -r requirements/_integrate.txt
          uv pip list

      - name: Integrations
        working-directory: ./tests
        env:
          PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: "python"
        run: python -m pytest integrations -v --durations=25 --reruns 3 --reruns-delay 2

      - name: Minimize uv cache
        run: uv cache prune --ci
